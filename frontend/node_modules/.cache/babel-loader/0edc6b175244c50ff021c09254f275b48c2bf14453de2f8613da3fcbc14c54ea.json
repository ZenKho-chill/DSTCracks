{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar StringDecoder = require('string_decoder').StringDecoder;\nvar inherits = require('inherits');\nfunction CipherBase(hashMode) {\n  Transform.call(this);\n  this.hashMode = typeof hashMode === 'string';\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest;\n  } else {\n    this['final'] = this._finalOrDigest;\n  }\n  if (this._final) {\n    this.__final = this._final;\n    this._final = null;\n  }\n  this._decoder = null;\n  this._encoding = null;\n}\ninherits(CipherBase, Transform);\nvar useUint8Array = typeof Uint8Array !== 'undefined';\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && ArrayBuffer.isView && (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT);\nfunction toBuffer(data, encoding) {\n  /*\r\n   * No need to do anything for exact instance\r\n   * This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\r\n   */\n  if (data instanceof Buffer) {\n    return data;\n  }\n\n  // Convert strings to Buffer\n  if (typeof data === 'string') {\n    return Buffer.from(data, encoding);\n  }\n\n  /*\r\n   * Wrap any TypedArray instances and DataViews\r\n   * Makes sense only on engines with full TypedArray support -- let Buffer detect that\r\n   */\n  if (useArrayBuffer && ArrayBuffer.isView(data)) {\n    // Bug in Node.js <6.3.1, which treats this as out-of-bounds\n    if (data.byteLength === 0) {\n      return Buffer.alloc(0);\n    }\n    var res = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n    /*\r\n     * Recheck result size, as offset/length doesn't work on Node.js <5.10\r\n     * We just go to Uint8Array case if this fails\r\n     */\n    if (res.byteLength === data.byteLength) {\n      return res;\n    }\n  }\n\n  /*\r\n   * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\r\n   * Doesn't make sense with other TypedArray instances\r\n   */\n  if (useUint8Array && data instanceof Uint8Array) {\n    return Buffer.from(data);\n  }\n\n  /*\r\n   * Old Buffer polyfill on an engine that doesn't have TypedArray support\r\n   * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\r\n   * Convert to our current Buffer implementation\r\n   */\n  if (Buffer.isBuffer(data) && data.constructor && typeof data.constructor.isBuffer === 'function' && data.constructor.isBuffer(data)) {\n    return Buffer.from(data);\n  }\n  throw new TypeError('The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');\n}\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  var bufferData = toBuffer(data, inputEnc); // asserts correct input type\n  var outData = this._update(bufferData);\n  if (this.hashMode) {\n    return this;\n  }\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc);\n  }\n  return outData;\n};\nCipherBase.prototype.setAutoPadding = function () {};\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state');\n};\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state');\n};\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state');\n};\nCipherBase.prototype._transform = function (data, _, next) {\n  var err;\n  try {\n    if (this.hashMode) {\n      this._update(data);\n    } else {\n      this.push(this._update(data));\n    }\n  } catch (e) {\n    err = e;\n  } finally {\n    next(err);\n  }\n};\nCipherBase.prototype._flush = function (done) {\n  var err;\n  try {\n    this.push(this.__final());\n  } catch (e) {\n    err = e;\n  }\n  done(err);\n};\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0);\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true);\n  }\n  return outData;\n};\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc);\n    this._encoding = enc;\n  }\n  if (this._encoding !== enc) {\n    throw new Error('can’t switch encodings');\n  }\n  var out = this._decoder.write(value);\n  if (fin) {\n    out += this._decoder.end();\n  }\n  return out;\n};\nmodule.exports = CipherBase;","map":{"version":3,"names":["Buffer","require","Transform","StringDecoder","inherits","CipherBase","hashMode","call","_finalOrDigest","_final","__final","_decoder","_encoding","useUint8Array","Uint8Array","useArrayBuffer","ArrayBuffer","isView","prototype","TYPED_ARRAY_SUPPORT","toBuffer","data","encoding","from","byteLength","alloc","res","buffer","byteOffset","isBuffer","constructor","TypeError","update","inputEnc","outputEnc","bufferData","outData","_update","_toString","setAutoPadding","getAuthTag","Error","setAuthTag","setAAD","_transform","_","next","err","push","e","_flush","done","value","enc","fin","out","write","end","module","exports"],"sources":["D:/dstcracks/DSTCracks/frontend/node_modules/cipher-base/index.js"],"sourcesContent":["'use strict';\r\n\r\nvar Buffer = require('safe-buffer').Buffer;\r\nvar Transform = require('stream').Transform;\r\nvar StringDecoder = require('string_decoder').StringDecoder;\r\nvar inherits = require('inherits');\r\n\r\nfunction CipherBase(hashMode) {\r\n\tTransform.call(this);\r\n\tthis.hashMode = typeof hashMode === 'string';\r\n\tif (this.hashMode) {\r\n\t\tthis[hashMode] = this._finalOrDigest;\r\n\t} else {\r\n\t\tthis['final'] = this._finalOrDigest;\r\n\t}\r\n\tif (this._final) {\r\n\t\tthis.__final = this._final;\r\n\t\tthis._final = null;\r\n\t}\r\n\tthis._decoder = null;\r\n\tthis._encoding = null;\r\n}\r\ninherits(CipherBase, Transform);\r\n\r\nvar useUint8Array = typeof Uint8Array !== 'undefined';\r\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined'\r\n\t&& typeof Uint8Array !== 'undefined'\r\n\t&& ArrayBuffer.isView\r\n\t&& (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT);\r\n\r\nfunction toBuffer(data, encoding) {\r\n\t/*\r\n\t * No need to do anything for exact instance\r\n\t * This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\r\n\t */\r\n\tif (data instanceof Buffer) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t// Convert strings to Buffer\r\n\tif (typeof data === 'string') {\r\n\t\treturn Buffer.from(data, encoding);\r\n\t}\r\n\r\n\t/*\r\n\t * Wrap any TypedArray instances and DataViews\r\n\t * Makes sense only on engines with full TypedArray support -- let Buffer detect that\r\n\t */\r\n\tif (useArrayBuffer && ArrayBuffer.isView(data)) {\r\n\t\t// Bug in Node.js <6.3.1, which treats this as out-of-bounds\r\n\t\tif (data.byteLength === 0) {\r\n\t\t\treturn Buffer.alloc(0);\r\n\t\t}\r\n\r\n\t\tvar res = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\r\n\t\t/*\r\n\t\t * Recheck result size, as offset/length doesn't work on Node.js <5.10\r\n\t\t * We just go to Uint8Array case if this fails\r\n\t\t */\r\n\t\tif (res.byteLength === data.byteLength) {\r\n\t\t\treturn res;\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\r\n\t * Doesn't make sense with other TypedArray instances\r\n\t */\r\n\tif (useUint8Array && data instanceof Uint8Array) {\r\n\t\treturn Buffer.from(data);\r\n\t}\r\n\r\n\t/*\r\n\t * Old Buffer polyfill on an engine that doesn't have TypedArray support\r\n\t * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\r\n\t * Convert to our current Buffer implementation\r\n\t */\r\n\tif (\r\n\t\tBuffer.isBuffer(data)\r\n\t\t\t&& data.constructor\r\n\t\t\t&& typeof data.constructor.isBuffer === 'function'\r\n\t\t\t&& data.constructor.isBuffer(data)\r\n\t) {\r\n\t\treturn Buffer.from(data);\r\n\t}\r\n\r\n\tthrow new TypeError('The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');\r\n}\r\n\r\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\r\n\tvar bufferData = toBuffer(data, inputEnc); // asserts correct input type\r\n\tvar outData = this._update(bufferData);\r\n\tif (this.hashMode) {\r\n\t\treturn this;\r\n\t}\r\n\r\n\tif (outputEnc) {\r\n\t\toutData = this._toString(outData, outputEnc);\r\n\t}\r\n\r\n\treturn outData;\r\n};\r\n\r\nCipherBase.prototype.setAutoPadding = function () {};\r\nCipherBase.prototype.getAuthTag = function () {\r\n\tthrow new Error('trying to get auth tag in unsupported state');\r\n};\r\n\r\nCipherBase.prototype.setAuthTag = function () {\r\n\tthrow new Error('trying to set auth tag in unsupported state');\r\n};\r\n\r\nCipherBase.prototype.setAAD = function () {\r\n\tthrow new Error('trying to set aad in unsupported state');\r\n};\r\n\r\nCipherBase.prototype._transform = function (data, _, next) {\r\n\tvar err;\r\n\ttry {\r\n\t\tif (this.hashMode) {\r\n\t\t\tthis._update(data);\r\n\t\t} else {\r\n\t\t\tthis.push(this._update(data));\r\n\t\t}\r\n\t} catch (e) {\r\n\t\terr = e;\r\n\t} finally {\r\n\t\tnext(err);\r\n\t}\r\n};\r\nCipherBase.prototype._flush = function (done) {\r\n\tvar err;\r\n\ttry {\r\n\t\tthis.push(this.__final());\r\n\t} catch (e) {\r\n\t\terr = e;\r\n\t}\r\n\r\n\tdone(err);\r\n};\r\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\r\n\tvar outData = this.__final() || Buffer.alloc(0);\r\n\tif (outputEnc) {\r\n\t\toutData = this._toString(outData, outputEnc, true);\r\n\t}\r\n\treturn outData;\r\n};\r\n\r\nCipherBase.prototype._toString = function (value, enc, fin) {\r\n\tif (!this._decoder) {\r\n\t\tthis._decoder = new StringDecoder(enc);\r\n\t\tthis._encoding = enc;\r\n\t}\r\n\r\n\tif (this._encoding !== enc) {\r\n\t\tthrow new Error('can’t switch encodings');\r\n\t}\r\n\r\n\tvar out = this._decoder.write(value);\r\n\tif (fin) {\r\n\t\tout += this._decoder.end();\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\nmodule.exports = CipherBase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}